"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[781],{3905:(e,o,t)=>{t.d(o,{Zo:()=>p,kt:()=>w});var n=t(7294);function i(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function r(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?r(Object(t),!0).forEach((function(o){i(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function l(e,o){if(null==e)return{};var t,n,i=function(e,o){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||(i[t]=e[t]);return i}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),c=function(e){var o=n.useContext(s),t=o;return e&&(t="function"==typeof e?e(o):a(a({},o),e)),t},p=function(e){var o=c(e.components);return n.createElement(s.Provider,{value:o},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},u=n.forwardRef((function(e,o){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),u=i,w=d["".concat(s,".").concat(u)]||d[u]||m[u]||r;return t?n.createElement(w,a(a({ref:o},p),{},{components:t})):n.createElement(w,a({ref:o},p))}));function w(e,o){var t=arguments,i=o&&o.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=u;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7145:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=t(7462),i=(t(7294),t(3905));const r={},a="Inject ViewModels into Composable",l={unversionedId:"compose/viewmodel",id:"compose/viewmodel",title:"Inject ViewModels into Composable",description:"Koject can inject Android ViewModels into Composable.",source:"@site/docs/compose/viewmodel.mdx",sourceDirName:"compose",slug:"/compose/viewmodel",permalink:"/koject/docs/compose/viewmodel",draft:!1,editUrl:"https://github.com/Mori-Atsushi/koject/tree/main/docs/docs/compose/viewmodel.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Inject into Composable",permalink:"/koject/docs/compose/core"}},s={},c=[{value:"Setup to use ViewModels in Compose",id:"setup-to-use-viewmodels-in-compose",level:2},{value:"Using ViewModels in Compose",id:"using-viewmodels-in-compose",level:2}],p={toc:c},d="wrapper";function m(e){let{components:o,...t}=e;return(0,i.kt)(d,(0,n.Z)({},p,t,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"inject-viewmodels-into-composable"},"Inject ViewModels into Composable"),(0,i.kt)("p",null,"Koject can inject Android ",(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/lifecycle/ViewModel"},"ViewModels")," into Composable."),(0,i.kt)("admonition",{title:"LINK",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Please also check the ",(0,i.kt)("a",{parentName:"p",href:"/docs/android/viewmodel"},"documentation")," for details on ViewModel, such as how to inject ViewModel into Activity / Fragment.")),(0,i.kt)("h2",{id:"setup-to-use-viewmodels-in-compose"},"Setup to use ViewModels in Compose"),(0,i.kt)("p",null,"To inject ViewModels into Composable, add the following dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    implementation("com.moriatsushi.koject:koject-compose-viewmodel:1.1.0-beta01")\n}\n')),(0,i.kt)("p",null,"Please also check the ",(0,i.kt)("a",{parentName:"p",href:"/docs/setup"},"Setup document"),"."),(0,i.kt)("h2",{id:"using-viewmodels-in-compose"},"Using ViewModels in Compose"),(0,i.kt)("p",null,"Specify the ",(0,i.kt)("a",{href:"/api/android/viewmodel/com.moriatsushi.koject.android.viewmodel/-view-model-component/index.html",target:"_blank"},(0,i.kt)("inlineCode",{parentName:"p"},"@ViewModelComponent"))," and ",(0,i.kt)("a",{href:"/api/core/com.moriatsushi.koject/-provides/index.html",target:"_blank"},(0,i.kt)("inlineCode",{parentName:"p"},"@Provides"))," annotations when defining a ViewModel.\nAs with other providing types, constructor injection is available."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Provides\n@ViewModelComponent\nclass TopViewModel(\n    private val userRepository: UserRepository,\n    private val contentRepository: ContentRepository,\n): ViewModel() {\n    /* ... */\n}\n")),(0,i.kt)("p",null,"When using ViewModels, use the ",(0,i.kt)("a",{href:"/api/compose/viewmodel/com.moriatsushi.koject.compose.viewmodel/inject-view-model.html",target:"_blank"},(0,i.kt)("inlineCode",{parentName:"p"},"injectViewModel()"))," Composable function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Composable\nfun TopPage(\n    viewModel: TopViewModel = injectViewModel()\n) {\n    /* ... */\n}\n")))}m.isMDXComponent=!0}}]);