"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[581],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),p=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?o.createElement(k,s(s({ref:t},c),{},{components:r})):o.createElement(k,s({ref:t},c))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1959:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const a={sidebar_position:1},s="Setup",i={unversionedId:"setup",id:"setup",title:"Setup",description:"Multiplatform",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/koject/docs/setup",draft:!1,editUrl:"https://github.com/Mori-Atsushi/koject/tree/main/docs/docs/setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",next:{title:"Usage",permalink:"/koject/docs/usage/"}},l={},p=[{value:"Multiplatform",id:"multiplatform",level:2},{value:"Single platform",id:"single-platform",level:2},{value:"Library module",id:"library-module",level:2},{value:"Multiplatform",id:"multiplatform-1",level:3},{value:"single platform",id:"single-platform-1",level:3},{value:"Version Catalog",id:"version-catalog",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"setup"},"Setup"),(0,n.kt)("h2",{id:"multiplatform"},"Multiplatform"),(0,n.kt)("p",null,"You need to enable ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/google/ksp"},"KSP"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'plugins {\n    kotlin("multiplatform")\n+    id("com.google.devtools.ksp") version "<ksp-version>"\n}\n\nkotlin {\n    android()\n    jvm()\n    js(IR) {\n        nodejs()\n        browser()\n    }\n    ios()\n\n    sourceSets {\n        val commonMain by getting {\n            dependencies {\n+                implementation("com.moriatsushi.koject:koject-core:1.0.0-alpha06")\n            }\n        }\n    }\n}\n\ndependencies {\n    // Add it according to your targets.\n+    val processor = "com.moriatsushi.koject:koject-processor-app:1.0.0-alpha06"\n+    add("kspAndroid", processor)\n+    add("kspJvm", processor)\n+    add("kspJs", processor)\n+    add("kspIosX64", processor)\n+    add("kspIosArm64", processor)\n}\n')),(0,n.kt)("h2",{id:"single-platform"},"Single platform"),(0,n.kt)("p",null,"Inject can also be used on a single platform."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'plugins {\n    kotlin("<target>")\n+    id("com.google.devtools.ksp") version "<ksp-version>"\n}\n\ndependencies {\n+    implementation("com.moriatsushi.koject:koject-core:1.0.0-alpha06")\n+    ksp("com.moriatsushi.koject:koject-processor-app1.0.0-alpha06")\n}\n')),(0,n.kt)("h2",{id:"library-module"},"Library module"),(0,n.kt)("p",null,"Use ",(0,n.kt)("inlineCode",{parentName:"p"},"koject-processor-lib")," to avoid generating ",(0,n.kt)("inlineCode",{parentName:"p"},"Container")," in library modules."),(0,n.kt)("h3",{id:"multiplatform-1"},"Multiplatform"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'dependencies {\n    // Add it according to your targets.\n-    val processor = "com.moriatsushi.koject:koject-processor-app:1.0.0-alpha06"\n+    val processor = "com.moriatsushi.koject:koject-processor-lib:1.0.0-alpha06"\n    add("kspAndroid", processor)\n    add("kspJvm", processor)\n    add("kspJs", processor)\n    add("kspIosX64", processor)\n    add("kspIosArm64", processor)\n}\n')),(0,n.kt)("h3",{id:"single-platform-1"},"single platform"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'dependencies {\n    implementation("com.moriatsushi.koject:koject-core:1.0.0-alpha06")\n-    ksp("com.moriatsushi.koject:koject-processor-app:1.0.0-alpha06")\n+    ksp("com.moriatsushi.koject:koject-processor-lib:1.0.0-alpha06")\n}\n')),(0,n.kt)("h2",{id:"version-catalog"},"Version Catalog"),(0,n.kt)("p",null,"Copy the following snippets if you are using ",(0,n.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/userguide/platforms.html"},"gradle verion catalog"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="libs.versions.toml"',title:'"libs.versions.toml"'},'[versions]\nkoject = "1.0.0-alpha06"\n\n[libraries]\nkoject-core = { group = "com.moriatsushi.koject", name = "koject-core", version.ref = "koject" }\nkoject-processor-app = { group = "com.moriatsushi.koject", name = "koject-processor-app", version.ref = "koject" }\nkoject-processor-lib = { group = "com.moriatsushi.koject", name = "koject-processor-lib", version.ref = "koject" }\n')))}u.isMDXComponent=!0}}]);