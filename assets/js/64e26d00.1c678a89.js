"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[917],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2258:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={},i="Start Koject",l={unversionedId:"usage/basic",id:"usage/basic",title:"Start Koject",description:"Add @Provides annotation to the class you want to provide.",source:"@site/docs/usage/basic.md",sourceDirName:"usage",slug:"/usage/basic",permalink:"/koject/docs/usage/basic",draft:!1,editUrl:"https://github.com/Mori-Atsushi/koject/tree/main/docs/docs/usage/basic.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Usage",permalink:"/koject/docs/usage/"},next:{title:"Qualifier",permalink:"/koject/docs/usage/qualifier"}},c={},s=[{value:"Provide from functions",id:"provide-from-functions",level:2},{value:"Singleton Scope",id:"singleton-scope",level:2}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"start-koject"},"Start Koject"),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},"@Provides")," annotation to the class you want to provide."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Provides\nclass Repository\n\n@Provides\nclass Controller(\n    private val repository: Repository\n)\n")),(0,o.kt)("p",null,"You can get an instance using ",(0,o.kt)("inlineCode",{parentName:"p"},"inject")," after calling ",(0,o.kt)("inlineCode",{parentName:"p"},"Koject.start()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun main() {\n    Koject.start()\n\n    val controller = inject<Controller>()\n}\n")),(0,o.kt)("h2",{id:"provide-from-functions"},"Provide from functions"),(0,o.kt)("p",null,"Any types can be provided from top-level functions with a ",(0,o.kt)("inlineCode",{parentName:"p"},"@Provides")," annotation. This is useful when provide outside modules classes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Provides\nfun provideDB(): DB {\n    return DB.create()\n}\n")),(0,o.kt)("p",null,"You can also provide from object functions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"object DBFactory {\n    @Provides\n    fun create(): DB {\n        return DB.create()\n    }\n}\n")),(0,o.kt)("h2",{id:"singleton-scope"},"Singleton Scope"),(0,o.kt)("p",null,"By adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"@Singleton")," annotation, the instance will be created only once and reused within the application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Singleton\n@Provides\nclass Api\n\n@Singleton\n@Provides\nfun provideDB(): DB {\n    return DB.create()\n}\n")),(0,o.kt)("p",null,"Note that you can't inject a normally scope type into a singleton scope type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Provides\nclass NormalScope\n\n@Singleton\n@Provides\nclass SingletonScope(\n    // cannot inject!\n    private val normal: NormalScope\n)\n")))}d.isMDXComponent=!0}}]);