package com.moriatsushi.koject.processor

import com.moriatsushi.koject.processor.assert.assertCompileSucceed
import com.moriatsushi.koject.processor.assert.assertFileExists
import com.moriatsushi.koject.processor.assert.assertFileTextEquals
import com.moriatsushi.koject.processor.compiletesting.KotlinCompilationFactory
import com.tschuchort.compiletesting.SourceFile
import org.intellij.lang.annotations.Language
import org.junit.Rule
import org.junit.Test
import org.junit.rules.TemporaryFolder

class DIProcessorBindsTest {
    @get:Rule
    val tempFolder: TemporaryFolder = TemporaryFolder()

    private val compilationFactory = KotlinCompilationFactory()

    @Test
    fun compile() {
        val folder = tempFolder.newFolder()
        val complication = compilationFactory.create(folder)
        complication.sources = listOf(inputCode)
        val result = complication.compile()

        assertCompileSucceed(result)

        val expectedFactoryFile = folder.resolve(expectedFactoryFilePath)
        assertFileExists(expectedFactoryFile)
        assertFileTextEquals(expectedFactoryText, expectedFactoryFile)
    }

    private val inputCode = SourceFile.kotlin(
        "Test.kt",
        """
                package com.testpackage

                import com.moriatsushi.koject.Binds
                import com.moriatsushi.koject.Provides

                @Binds
                @Provides
                class SampleImpl: Sample

                interface Sample
            """,
    )

    private val expectedFactoryFilePath =
        "ksp/sources/kotlin/com/moriatsushi/koject/generated/factory/" +
            "_com_testpackage_Sample_Factory.kt"

    @Language("kotlin")
    private val expectedFactoryText = """
        |// Generated by Koject. Do not modify!
        |package com.moriatsushi.koject.generated.factory
        |
        |import com.moriatsushi.koject.`internal`.InternalKojectApi
        |import com.moriatsushi.koject.`internal`.identifier.Identifier
        |import com.moriatsushi.koject.`internal`.identifier.StringIdentifier
        |import com.testpackage.Sample
        |import com.testpackage.SampleImpl
        |import kotlin.Any
        |
        |@InternalKojectApi
        |@StringIdentifier("com.testpackage.Sample")
        |public class _com_testpackage_Sample_Factory() {
        |    public fun create(): Any = SampleImpl()
        |
        |    public companion object {
        |        public val identifier: Identifier = Identifier.of<Sample>()
        |    }
        |}
        |
    """.trimMargin()
}
